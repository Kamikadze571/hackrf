#!/bin/sh

if [ -r "../../../firmware/hackrf_one_usb.dfu" ]; then
  ram_firmware="../../../firmware/hackrf_one_usb.dfu"
elif [ -r "../../../firmware-bin/hackrf_one_usb.dfu" ]; then
  ram_firmware="../../../firmware-bin/hackrf_one_usb.dfu"
elif [ -r "/usr/share/hackrf/hackrf_one_usb.dfu" ]; then
  ram_firmware="/usr/share/hackrf/hackrf_one_usb.dfu"
else
  printf "Unable to find hackrf_one_usb.dfu in the search path\n"
  exit 1
fi

usage() {
  printf "${0} upgrade\n"
}

if [ -z "${1}" ]; then
  usage
  exit 0
fi

list_firmware() {
  printf "Best DFU found: ${ram_firmware}\n"
  printf "Available firmware options:\n"
  if [ -r "/usr/share/hackrf/hackrf_one_usb_rom_to_ram.bin" ]; then
    printf "hackrf (default)\n"
  fi
  if [ -r "/usr/share/hackrf/portapack-h1-firmware.bin" ]; then
    printf "portapack (--portapack)\n"
  fi
  if [ -r "/usr/share/hackrf/portapack-h1-havoc.bin" ]; then
    printf "portapack-havoc (--havoc)\n"
  fi
}

#parse args
while true; do
  case $1 in
    -h|--help)
      usage
      exit 0
      ;;
    list|--list)
      list_firmware
      exit 0
      ;;
    update|--update|upgrade|--upgrade|hackrf|--hackrf)
      if [ -r "../../../firmware/hackrf_one_usb.bin" ]; then
        firmware="../../../firmware/hackrf_one_usb.bin"
      elif [ -r "../../../firmware-bin/hackrf_one_usb.bin" ]; then
        firmware="../../../firmware-bin/hackrf_one_usb.bin"
      elif [ -r "/usr/share/hackrf/hackrf_one_usb.bin" ]; then
        firmware="/usr/share/hackrf/hackrf_one_usb.bin"
      else
        printf "Unable to find hackrf_one_usb.bin in the search path\n"
        exit 1
      fi
      shift
      ;;
    portapack|--portapack)
      firmware="/usr/share/hackrf/portapack-h1-firmware.bin"
      shift
      ;;
    havoc|--havoc)
      firmware="/usr/share/hackrf/portapack-h1-havoc.bin"
      shift
      ;;
    --)
      shift
      break
      ;;
    *)
      break
      ;;
  esac
  shift
done

if [ ! -r "${firmware}" ]; then
  printf "Unable to find or read ${firmware}\n"
  printf "Please ensure the requested firmware is installed and readable\n"
  exit 1
fi

printf "Preparing to reset hackrf with DFU ${ram_firmware}\n"
printf "Then flashing with ${firmware}\n\n"
printf "Hold down the HackRF's DFU button (the button closest to the antenna jack)\n"
printf "then plug the HackRF into a USB port on your computer.\n"
printf "After the HackRF is plugged in, you may release the DFU button.\n"
printf "Press any key to continue or ^c to abort\n"
read
dfu-util --device 1fc9:000c --download "${ram_firmware}" --reset
sleep 2s
hackrf_spiflash -w "${firmware}"
